# microservice specific routes

->          /hmrc-frontend                     hmrcfrontend.Routes

GET         /                                  controllers.IndexController.onPageLoad

GET         /assets/*file                      controllers.Assets.versioned(path="/public", file: Asset)

GET         /language/:lang                    controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /refresh-session                   controllers.KeepAliveController.keepAlive

GET         /there-is-a-problem                controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /check-your-answers                controllers.CheckYourAnswersController.onPageLoad()

GET         /account/sign-out-survey           controllers.auth.AuthController.signOut
GET         /account/sign-out                  controllers.auth.AuthController.signOutNoSurvey
GET         /account/signed-out                controllers.auth.SignedOutController.onPageLoad

GET         /unauthorised                      controllers.UnauthorisedController.onPageLoad

GET         /cannot-use-not-registered         controllers.NotRegisteredController.onPageLoad()

GET         /your-account                      controllers.YourAccountController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /:period/start                     controllers.StartReturnController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
POST        /:period/start                     controllers.StartReturnController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, period: Period)

GET         /soldGoods                         controllers.SoldGoodsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /soldGoods                         controllers.SoldGoodsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /soldToCountry/:index              controllers.SoldToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /soldToCountry/:index              controllers.SoldToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /vatRatesFromCountry/:index        controllers.VatRatesFromCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /vatRatesFromCountry/:index        controllers.VatRatesFromCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /sales-to-country/:countryIndex/:vatRateIndex               controllers.SalesToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, vatRateIndex: Index)
POST        /sales-to-country/:countryIndex/:vatRateIndex               controllers.SalesToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, vatRateIndex: Index)

GET         /vatOnSales/:index                 controllers.VatOnSalesController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /vatOnSales/:index                 controllers.VatOnSalesController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /no-other-periods-available        controllers.NoOtherPeriodsAvailableController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /add-sales-country-list            controllers.SoldToCountryListController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /add-sales-country-list            controllers.SoldToCountryListController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /remove-sales-country/:index        controllers.DeleteSoldToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /remove-sales-country/:index        controllers.DeleteSoldToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /correction-country/:countryIndex   controllers.corrections.CorrectionCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index)
POST        /correction-country/:countryIndex   controllers.corrections.CorrectionCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index)

GET        /correct-previous-return             controllers.corrections.CorrectPreviousReturnController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST       /correct-previous-return             controllers.corrections.CorrectPreviousReturnController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

