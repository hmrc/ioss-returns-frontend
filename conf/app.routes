# microservice specific routes

->          /hmrc-frontend                                                            hmrcfrontend.Routes

GET         /                                                                         controllers.IndexController.onPageLoad

GET         /assets/*file                                                             controllers.Assets.versioned(path="/public", file: Asset)

GET         /language/:lang                                                           controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /refresh-session                                                          controllers.KeepAliveController.keepAlive

GET         /there-is-a-problem                                                       controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /check-your-answers                                                       controllers.CheckYourAnswersController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /check-your-answers                                                       controllers.CheckYourAnswersController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, incompletePromptShown:Boolean)

GET         /account/sign-out-survey                                                  controllers.auth.AuthController.signOut
GET         /account/sign-out                                                         controllers.auth.AuthController.signOutNoSurvey
GET         /account/signed-out                                                       controllers.auth.SignedOutController.onPageLoad

GET         /unauthorised                                                             controllers.UnauthorisedController.onPageLoad

GET         /cannot-use-not-registered                                                controllers.NotRegisteredController.onPageLoad()

GET         /your-account                                                             controllers.YourAccountController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /:period/start                                                            controllers.StartReturnController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
POST        /:period/start                                                            controllers.StartReturnController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, period: Period)

GET         /sold-goods                                                               controllers.SoldGoodsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /sold-goods                                                               controllers.SoldGoodsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /sold-to-country/:index                                                   controllers.SoldToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /sold-to-country/:index                                                   controllers.SoldToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /vat-rates-from-country/:index                                            controllers.VatRatesFromCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /vat-rates-from-country/:index                                            controllers.VatRatesFromCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /sales-to-country/:countryIndex/:nextVatRateIndex                         controllers.SalesToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)
POST        /sales-to-country/:countryIndex/:nextVatRateIndex                         controllers.SalesToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)

GET         /vat-on-sales/:countryIndex/:nextVatRateIndex                             controllers.VatOnSalesController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)
POST        /vat-on-sales/:countryIndex/:nextVatRateIndex                             controllers.VatOnSalesController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)

GET         /no-other-periods-available                                               controllers.NoOtherPeriodsAvailableController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
GET         /cannot-start-return                                                      controllers.CannotStartReturnController.onPageLoad()
GET         /cannot-start-excluded-return                                             controllers.CannotStartExcludedReturnController.onPageLoad()

GET         /add-sales-country-list                                                   controllers.SoldToCountryListController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /add-sales-country-list                                                   controllers.SoldToCountryListController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /remove-sales-country/:index                                              controllers.DeleteSoldToCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /remove-sales-country/:index                                              controllers.DeleteSoldToCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /check-sales/:index                                                       controllers.CheckSalesController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /check-sales/:index                                                       controllers.CheckSalesController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /remove-vat-rate-sales-for-country/:countryIndex/:nextVatRateIndex        controllers.DeleteVatRateSalesForCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)
POST        /remove-vat-rate-sales-for-country/:countryIndex/:nextVatRateIndex        controllers.DeleteVatRateSalesForCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)

GET         /remaining-vat-rate-from-country/:countryIndex/:nextVatRateIndex          controllers.RemainingVatRateFromCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)
POST        /remaining-vat-rate-from-country/:countryIndex/:nextVatRateIndex          controllers.RemainingVatRateFromCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, nextVatRateIndex: Index)

GET         /correction-return-single-period/:index                                   controllers.corrections.CorrectionReturnSinglePeriodController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /correction-return-single-period/:index                                   controllers.corrections.CorrectionReturnSinglePeriodController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /correction-return-year/:index                                            controllers.corrections.CorrectionReturnYearController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /correction-return-year/:index                                            controllers.corrections.CorrectionReturnYearController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /correction-return-period/:index                                          controllers.corrections.CorrectionReturnPeriodController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /correction-return-period/:index                                          controllers.corrections.CorrectionReturnPeriodController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /no-correction-periods-available                                          controllers.corrections.NoOtherCorrectionPeriodsAvailableController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /no-correction-periods-available                                          controllers.corrections.NoOtherCorrectionPeriodsAvailableController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /correct-previous-return                                                  controllers.corrections.CorrectPreviousReturnController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /correct-previous-return                                                  controllers.corrections.CorrectPreviousReturnController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /correction-country/:periodIndex/:countryIndex                            controllers.corrections.CorrectionCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)
POST        /correction-country/:periodIndex/:countryIndex                            controllers.corrections.CorrectionCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)

GET         /country-vat-correction-amount/:periodIndex/:countryIndex                 controllers.corrections.VatAmountCorrectionCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)
POST        /country-vat-correction-amount/:periodIndex/:countryIndex                 controllers.corrections.VatAmountCorrectionCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)

GET         /remove-country-correction/:periodIndex/:countryIndex                     controllers.corrections.RemoveCountryCorrectionController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)
POST        /remove-country-correction/:periodIndex/:countryIndex                     controllers.corrections.RemoveCountryCorrectionController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)

GET         /add-new-country/:periodIndex/:countryIndex                               controllers.corrections.UndeclaredCountryCorrectionController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)
POST        /add-new-country/:periodIndex/:countryIndex                               controllers.corrections.UndeclaredCountryCorrectionController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)

GET         /vat-payable-confirm/:periodIndex/:countryIndex                           controllers.corrections.VatPayableForCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)
POST        /vat-payable-confirm/:periodIndex/:countryIndex                           controllers.corrections.VatPayableForCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index, countryIndex: Index)

GET         /correction-list-countries/:periodIndex                                   controllers.corrections.CorrectionListCountriesController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index)
POST        /correction-list-countries/:periodIndex                                   controllers.corrections.CorrectionListCountriesController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index)

GET         /:period/vat-correction-periods                                           controllers.corrections.VatPeriodCorrectionsListController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
POST        /:period/vat-correction-periods                                           controllers.corrections.VatPeriodCorrectionsListController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, period: Period, incompletePromptShown: Boolean)

GET         /:period/vat-correction-periods-add                                       controllers.corrections.VatPeriodCorrectionsListWithFormController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
POST        /:period/vat-correction-periods-add                                       controllers.corrections.VatPeriodCorrectionsListWithFormController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, period: Period, incompletePromptShown: Boolean)

GET         /remove-period-correction/:periodIndex                                    controllers.corrections.RemovePeriodCorrectionController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index)
POST        /remove-period-correction/:periodIndex                                    controllers.corrections.RemovePeriodCorrectionController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, periodIndex: Index)

GET         /successfully-submitted                                                   controllers.submissionResults.SuccessfullySubmittedController.onPageLoad()

GET         /submission-failure                                                       controllers.submissionResults.ReturnSubmissionFailureController.onPageLoad()

GET         /past-returns                                                             controllers.previousReturns.SubmittedReturnsHistoryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /past-returns/:period                                                     controllers.previousReturns.SubmittedReturnForPeriodController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
GET         /past-returns/:period/:iossNumber                                         controllers.previousReturns.SubmittedReturnForPeriodController.onPageLoadForIossNumber(waypoints: Waypoints ?= EmptyWaypoints, period: Period, iossNumber: String)

GET         /return-registration-selection                                            controllers.previousReturns.ReturnRegistrationSelectionController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /return-registration-selection                                            controllers.previousReturns.ReturnRegistrationSelectionController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /view-returns-multiple-reg                                                controllers.previousReturns.ViewReturnsMultipleRegController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /outstanding-payments                                                     controllers.payments.WhichVatPeriodToPayController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /outstanding-payments                                                     controllers.payments.WhichVatPeriodToPayController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /intercept-unusable-email                                                 controllers.InterceptUnusableEmailController.onPageLoad()

GET         /no-welsh-service                                                         controllers.external.NoMoreWelshController.onPageLoad(redirectUrl: Option[RedirectUrl] ?= None)

GET         /make-payment/:period                                                     controllers.payments.PaymentController.makePayment(waypoints: Waypoints ?= EmptyWaypoints, period: Period)
GET         /make-payment/:period/:iossNumber                                         controllers.payments.PaymentController.makePaymentForIossNumber(waypoints: Waypoints ?= EmptyWaypoints, period: Period, iossNumber: String)

GET         /excluded-cannot-use-service                                              controllers.ExcludedNotPermittedController.onPageLoad()

GET         /start-return                                                             controllers.StartOutstandingReturnController.onPageLoad()
GET         /no-returns-due                                                           controllers.NoReturnsDueController.onPageLoad()

GET         /:period/return-delete-confirm                                            controllers.DeleteReturnController.onPageLoad(period: Period)
POST        /:period/return-delete-confirm                                            controllers.DeleteReturnController.onSubmit(period: Period)

GET         /:period/progress-saved                                                   controllers.SavedProgressController.onPageLoad(period: Period, continueUrl: RedirectUrl)

GET         /:period/return-continue                                                  controllers.ContinueReturnController.onPageLoad(period: Period)
POST        /:period/return-continue                                                  controllers.ContinueReturnController.onSubmit(period: Period)

GET         /whichPreviousRegistrationToPay                                           controllers.payments.WhichPreviousRegistrationToPayController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /whichPreviousRegistrationToPay                                           controllers.payments.WhichPreviousRegistrationToPayController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)
